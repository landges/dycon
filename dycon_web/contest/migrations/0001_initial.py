# Generated by Django 3.2.7 on 2021-10-04 23:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('url_redirect', models.URLField(blank=True, help_text='(NOTE: You should not have Registration Required above checked if using URL redirection, because upon redirect participants will not be approved and unable to participate.)', null=True, verbose_name='URL Redirect')),
                ('image', models.FileField(blank=True, null=True, upload_to='logos', verbose_name='Logo')),
                ('image_url_base', models.CharField(max_length=255)),
                ('has_registration', models.BooleanField(default=False, verbose_name='Registration Required')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date (UTC)')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date (UTC)')),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('published', models.BooleanField(default=False, verbose_name='Publicly Available')),
                ('scoring_program', models.FileField(blank=True, null=True, upload_to='scoring_program_file', verbose_name='Scoring Program')),
                ('admins', models.ManyToManyField(blank=True, null=True, related_name='competition_admins', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitioninfo_creator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('number', models.PositiveIntegerField(default=1)),
                ('datafile', models.FileField(upload_to='datasets')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='CompetitionSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret', models.CharField(blank=True, default='', max_length=128)),
                ('docker_image', models.CharField(blank=True, default='', max_length=128)),
                ('file', models.FileField(blank=True, null=True, upload_to='submission_file_name')),
                ('description', models.CharField(blank=True, max_length=256)),
                ('inputfile', models.FileField(blank=True, null=True, upload_to='submission_inputfile')),
                ('runfile', models.FileField(blank=True, null=True, upload_to='submission_runfile')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status_details', models.CharField(blank=True, max_length=100, null=True)),
                ('submission_number', models.PositiveIntegerField(default=0)),
                ('output_file', models.FileField(blank=True, null=True, upload_to='submission_output')),
                ('private_output_file', models.FileField(blank=True, null=True, upload_to='submission_private_output')),
                ('stdout_file', models.FileField(blank=True, null=True, upload_to='submission_stdout')),
                ('stderr_file', models.FileField(blank=True, null=True, upload_to='submission_stderr')),
                ('history_file', models.FileField(blank=True, null=True, upload_to='submission_history')),
                ('scores_file', models.FileField(blank=True, null=True, upload_to='submission_scores')),
                ('coopetition_file', models.FileField(blank=True, null=True, upload_to='submission_coopetition')),
                ('detailed_results_file', models.FileField(blank=True, null=True, upload_to='submission_detailed_results')),
                ('prediction_runfile', models.FileField(blank=True, null=True, upload_to='submission_prediction_runfile')),
                ('prediction_output_file', models.FileField(blank=True, null=True, upload_to='submission_prediction_output')),
                ('exception_details', models.TextField(blank=True, null=True)),
                ('prediction_stdout_file', models.FileField(blank=True, null=True, upload_to='predict_submission_stdout')),
                ('prediction_stderr_file', models.FileField(blank=True, null=True, upload_to='predict_submission_stderr')),
                ('method_name', models.CharField(blank=True, max_length=20, null=True)),
                ('method_description', models.TextField(blank=True, null=True)),
                ('project_url', models.URLField(blank=True, null=True)),
                ('publication_url', models.URLField(blank=True, null=True)),
                ('team_name', models.CharField(blank=True, max_length=64, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('download_count', models.IntegerField(default=0)),
                ('like_count', models.IntegerField(default=0)),
                ('dislike_count', models.IntegerField(default=0)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='contest.competition')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='competition',
            name='datasets',
            field=models.ManyToManyField(blank=True, related_name='phase', to='contest.Dataset'),
        ),
        migrations.AddField(
            model_name='competition',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitioninfo_modified_by', to=settings.AUTH_USER_MODEL),
        ),
    ]
